AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Tranmere-Web-Api

  Sam scripts for tranmere-web
Parameters:
  Email:
    Type: String
    Description: The email address to send contact to
  ESCluster:
    Type: String
    Description: The email address to send contact to
  ESUser:
    Type: String
    Description: The email address to send contact to
  ESPassword:
    Type: String
    Description: The email address to send contact to

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 600
  Api:
    Cors:
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"

Resources:
  TranmereWebApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: TranmereWebApi Gateway
      StageName: Prod
      Domain:
        DomainName: api.tranmere-web.com
        CertificateArn: arn:aws:acm:us-east-1:559251280975:certificate/f3059bff-501c-4efc-83ea-21d9bc0f2500
        EndpointConfiguration: EDGE
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'https://www.tranmere-web.com'"
        MaxAge: "'600'"
        AllowCredentials: True

  PlayerSearchFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/player-search/
      Handler: app.handler
      Runtime: nodejs12.x
      Environment:
        Variables:
          ES_CLUSTER: !Ref 'ESCluster'
          ES_USER: !Ref 'ESUser'
          ES_PASSWORD: !Ref 'ESPassword'
      Events:
        PageRequest:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /player-search
            RestApiId: !Ref TranmereWebApiGateway
            Method: get

  SearchFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/search/
      Handler: app.handler
      Runtime: nodejs12.x
      Environment:
        Variables:
          ES_CLUSTER: !Ref 'ESCluster'
          ES_USER: !Ref 'ESUser'
          ES_PASSWORD: !Ref 'ESPassword'
      Events:
        PageRequest:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /search
            RestApiId: !Ref TranmereWebApiGateway
            Method: get

  PageFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/page/
      Handler: app.handler
      Runtime: nodejs12.x
      Events:
        PageRequest:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /page/{pageName}
            RestApiId: !Ref TranmereWebApiGateway
            Method: get

  ScraperFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/scraper/
      Handler: app.handler
      Runtime: nodejs12.x
      Events:
        PageRequest:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /scraper/{season}/{id}
            RestApiId: !Ref TranmereWebApiGateway
            Method: get

  PlayerBuilderFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/player-builder/
      Handler: app.handler
      Runtime: nodejs12.x
      Events:
        PageRequest:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /player-builder/{kit}/{hair}/{body}/{features}
            RestApiId: !Ref TranmereWebApiGateway
            Method: get

  ContactUsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/contact-us/
      Handler: app.handler
      Runtime: nodejs12.x
      Policies:
        - AWSXrayWriteOnlyAccess
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
                - 'ses:SendRawEmail'
              Resource: '*'
      Environment:
        Variables:
          EMAIL_ADDRESS: !Ref 'Email'
      Events:
        ContactRequest:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /contact-us
            RestApiId: !Ref TranmereWebApiGateway
            Method: post

  PlayerCRUDFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/crud/
      Handler: app.playerHandler
      Runtime: nodejs12.x
      Events:
        PlayerPostAPI:
          Type: Api
          Properties:
            Path: /api-player
            Method: POST
            RestApiId: !Ref TranmereWebApiGateway
        PlayerGetByNameAPI:
          Type: Api
          Properties:
            Path: /api-player/{name}
            Method: GET
            RestApiId: !Ref TranmereWebApiGateway
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerTable

  EntityFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/entities/
      Handler: app.entityHandler
      Runtime: nodejs12.x
      Events:
        GetEntitiesByCategoryAPI:
          Type: Api
          Properties:
            Path: /entities/{entity}/{category}/{attribute}
            Method: GET
            RestApiId: !Ref TranmereWebApiGateway
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebMediaTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerLinks
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerTransfers
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebManagers
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebStars
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebClubs
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebMatches


  TranmereWebCSVUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tranmere-web-csv-uploads

  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/upload/
      Handler: app.mediaHandler
      Runtime: nodejs12.x
      Events:
        UploadMediaEvent:
          Type: S3
          Properties:
            Bucket: !Ref TranmereWebCSVUploadBucket
            Events: s3:ObjectCreated:*
      Policies:
        - S3ReadPolicy:
            BucketName: tranmere-web-csv-uploads
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebMediaTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerLinks
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerTransfers
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebManagers
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebPlayerTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebStars
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebClubs
        - DynamoDBCrudPolicy:
            TableName: !Ref TranmereWebMatches

  TranmereWebPlayerTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebPlayerTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  TranmereWebMediaTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebMediaTable
      AttributeDefinitions:
        - AttributeName: category
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: category
          KeyType: HASH
        - AttributeName: id
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  TranmereWebPlayerLinks:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebPlayerLinks
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: id
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  TranmereWebPlayerTransfers:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebPlayerTransfers
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: id
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  TranmereWebManagers:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebManagers
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: id
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  TranmereWebClubs:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebClubs
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: id
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  TranmereWebStars:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebStars
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
        - AttributeName: id
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  TranmereWebMatches:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TranmereWebMatches
      AttributeDefinitions:
        - AttributeName: season
          AttributeType: N
        - AttributeName: date
          AttributeType: S
        - AttributeName: competition
          AttributeType: S
        - AttributeName: opposition
          AttributeType: S
        - AttributeName: attendance
          AttributeType: N
        - AttributeName: venue
          AttributeType: S
        - AttributeName: pens
          AttributeType: S
      KeySchema:
        - AttributeName: season
          KeyType: HASH
        - AttributeName: date
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: CompetitionIndex
          KeySchema:
            - AttributeName: competition
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: AttendanceIndex
          KeySchema:
            - AttributeName: attendance
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: PensIndex
          KeySchema:
            - AttributeName: pens
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: VenueIndex
          KeySchema:
            - AttributeName: venue
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: OppositionIndex
          KeySchema:
            - AttributeName: opposition
              KeyType: HASH
          Projection:
            ProjectionType: ALL

Outputs:
  ContactUsFunction:
    Description: "Contact Us Lambda Function ARN"
    Value: !GetAtt ContactUsFunction.Arn
  ContactUsFunctionIamRole:
    Description: "Implicit IAM Role created for Contact Us function"
    Value: !GetAtt ContactUsFunctionRole.Arn
