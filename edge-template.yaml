AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Tranmere-Web-CDN

  Sam scripts for tranmere-web

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Resources:

  cdn:
    Type: AWS::CloudFront::Distribution
    DependsOn: EdgeFunction
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          TargetOriginId: AmplifyMaster
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: origin-response
              LambdaFunctionARN: !Ref EdgeFunction.Version
        DefaultRootObject: index.html
        Enabled: true
        Origins:
          - DomainName: master.dj8vrlzimytqk.amplifyapp.com
            Id: AmplifyMaster
            CustomOriginConfig:
              OriginProtocolPolicy: https-only

  EdgeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/edge/
      Handler: app.handler
      Runtime: nodejs12.x
      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      AutoPublishAlias: live

  LambdaEdgeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowLambdaServiceToAssumeRole
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"

